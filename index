
theme: jekyll-theme-hacker
[.text-center]

 A seguir será apresentado alguns códigos de processamento digital de imagens,
para ajudar você a dar inicio aos seus estudos.

[.text-center]
foram feitos utilizando a linguagem de programação C++ com auxílio da biblioteca OpenCV, 
a qual disponibiliza as funções necessárias para realizar diferentes processos.


[source,java]
----

#include<iostream>
#include<opencv2/opencv.hpp>

using namespace std;
using namespace cv;

int main(int, char**){
	Mat foto;
	cout <<"imagem com 338 de largura e 450 de altura, por favor não ultrapassar os limites \n";
	int P1x, P1y, P2x, P2y;
	cout <<"Digite o valor de x e y do ponto P1 \n";
	cin >> P1x >> P1y;
	
	cout <<"Digite o valor de x e y do ponto P2 \n";
	cin >> P2x >> P2y;
	
	foto = imread("noite.jpeg",CV_LOAD_IMAGE_GRAYSCALE); //carrega a imagem
	
	if(!foto.data){
		cout<< "imagem não abriu \n";
	}
	
	namedWindow("imagem_abstrata",WINDOW_AUTOSIZE); //cria uma janela com tamanho igua ao da imagem
	
	/*O bloco de for a seguir prenche os pixels como o inversor da tonalidade zinza que ele tinha,
	por exemplo, se fosse preto, ou seja zero, o valor se torna 255, ou seja, branco. Na imagem, na coordenada 
	x os pixels, são preenchidos do ponto P1x até P2x e na y são preenchidos dos pontos P1y até P2y
	*/

	for(int i = P1x; i<P2x; i++){
		for(int j = P1y; j<P2y; j++){
			foto.at<char>(i,j)=255-foto.at<char>(i,j); 
		}
	}
	
	imshow("imagem_abstrata", foto);
	waitKey();
	return 0;

----

