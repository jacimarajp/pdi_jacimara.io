
[.text-center]

O exemplo 2, divide a imagem em 4 quadrantes e junta ele em posições trocadas diagonalmente.

[source,java]
----
#include<iostream>
#include<opencv2/opencv.hpp>
#include <cv.h>
#include <highgui.h>

using namespace cv;
using namespace std;

int main(int, char**){
	//int altu , larg;
	Mat image;
	Mat a,b,c,d;
	
	image = imread("noite.jpeg",CV_LOAD_IMAGE_GRAYSCALE);
	
	Mat aux= image.clone();  //imagem é clonado para aux, para apresentar o mesmo tamanho
	
	//tamanho da imagem
	int altura = image.rows;
	int largura = image.cols;
	
	//divide a imagem em quatro retangulos 
	
	a = image(Rect(0, 0, largura/2, altura/2)); 
	b = image(Rect(largura/2,0,largura/2,altura/2)); //q2
	c = image(Rect(0,altura/2,largura/2,altura/2)); //q1
	d= image(Rect(largura/2,altura/2,largura/2,altura/2)); //q3
	
	//copia os quadrantes para a matriz aux trocando diagonalmente
	

	a.copyTo(aux(Rect(largura/2,altura/2,largura/2,altura/2)));
	b.copyTo(aux(Rect(0,altura/2,largura/2,altura/2)));
	c.copyTo(aux(Rect(largura/2,0,largura/2,altura/2)));
	d.copyTo(aux(Rect(0, 0, largura/2, altura/2)));

		

	// apresenta as imagens de cada quadrante
	imshow("Região Trocada1",a);
	imshow("Região Trocada2",b);
	imshow("Região Trocada3",c);
	imshow("Região Trocada4",d);
	
	// apresenta a imagem com os quadrantes invertidos diagonalmente
	imshow("quadrante",aux);
	waitKey();
  return 0;
}

----

[.text-center]
image::quadrante1.png[]
imagem do quadrante
